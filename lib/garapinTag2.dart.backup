import 'dart:io';

import 'package:carousel_slider/carousel_slider.dart';
import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';

class GarapInTag extends StatefulWidget {
  GarapInTag(
      {@required this.text,
      this.initTag,
      this.onClose,
      this.width,
      this.labeltext});
  final double width;
  final String text;
  final String labeltext;
  bool initTag = true;
  VoidCallback onClose;
  @override
  _GarapInTagState createState() => _GarapInTagState();
}

class _GarapInTagState extends State<GarapInTag> {
  final _picker = ImagePicker();
  final current = new ValueNotifier(0);

  List<PickedFile> _imagePickedFiles = List<PickedFile>();

  List<Builder> _buildImageTag(List<PickedFile> _listImages) {
    return _listImages.asMap().entries.map((e) {
      int index = e.key;
      PickedFile value = e.value;

      return Builder(
        builder: (BuildContext context) {
          return Stack(children: [
            Container(
                margin: EdgeInsets.all(5),
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(10),
                  color: Colors.black,
                ),
                child: ClipRRect(
                  child: Image.file(File(value.path),
                      fit: BoxFit.cover, width: 100, height: 75),
                  borderRadius: BorderRadius.circular(10),
                )),
            Positioned(
              right: 0,
              top: 0,
              width: 22,
              height: 22,
              child: MaterialButton(
                height: 22,
                onPressed: () {
                  setState(() {
                    _listImages.removeAt(index);
                  });

                  List.generate(_listImages.length, (index) {
                    print(_listImages[index].path);
                  });
                },
                color: Colors.red,
                textColor: Colors.white,
                child: Icon(
                  Icons.close,
                  size: 15,
                ),
                padding: EdgeInsets.all(0),
                shape: CircleBorder(),
              ),
            ),
          ]);
        },
      );
    }).toList();
  }

  Widget _buildImagePosTag(List<PickedFile> _listImages) {
    return ValueListenableBuilder(
        valueListenable: current,
        builder: (context, value, child) {
          return Row(
              mainAxisAlignment: MainAxisAlignment.center,
              crossAxisAlignment: CrossAxisAlignment.center,
              children: _imagePickedFiles.map((e) {
                int index = _listImages.indexOf(e);
                return Builder(builder: (BuildContext context) {
                  return Container(
                    width: index == value ? 7.0 : 5.0,
                    height: index == value ? 7.0 : 5.0,
                    margin:
                        EdgeInsets.symmetric(vertical: 10.0, horizontal: 2.0),
                    decoration: BoxDecoration(
                      shape: BoxShape.circle,
                      color: index == value ? Colors.white : Color(0xFFC3C3C3),
                    ),
                  );
                });
              }).toList());
        });
  }

  Widget _buildTags(BuildContext context) {
    return !this.widget.initTag
        ? Container()
        : Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              Container(
                width: 150,
                child: Directionality(
                  textDirection: TextDirection.ltr,
                  child: Stack(
                    children: [
                      CarouselSlider(
                        options: CarouselOptions(
                            aspectRatio: 1,
                            autoPlay: false,
                            height: 80,
                            enableInfiniteScroll: false,
                            enlargeCenterPage: false,
                            viewportFraction: 0.7,
                            onPageChanged: (index, reason) =>
                                current.value = index),
                        items: _buildImageTag(_imagePickedFiles),
                      ),
                      Positioned(
                          left: 10,
                          right: 10,
                          bottom: 0,
                          child: _buildImagePosTag(_imagePickedFiles)),
                    ],
                  ),
                ),
              ),
              SizedBox(
                height: 10,
              ),
              Container(
                padding: EdgeInsets.fromLTRB(5, 0, 5, 0),
                height: 26,
                decoration: BoxDecoration(
                  border: Border.all(color: Colors.grey),
                  borderRadius: BorderRadius.circular(50),
                ),
                child: Directionality(
                  textDirection: TextDirection.ltr,
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.start,
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      Text(
                        this.widget.text,
                        style: TextStyle(color: Colors.black),
                        //textAlign: TextAlign.left,
                      ),
                      SizedBox(
                        width: 5,
                      ),
                      Container(
                        width: 25,
                        child: MaterialButton(
                          height: 22,
                          onPressed: () async {
                            final pickedFile = await _picker.getImage(
                                source: ImageSource.gallery);
                            if (pickedFile != null) {
                              setState(() {
                                _imagePickedFiles.add(pickedFile);
                              });
                            }
                          },
                          color: Colors.blue,
                          textColor: Colors.white,
                          child: Icon(
                            Icons.camera_alt,
                            size: 15,
                          ),
                          padding: EdgeInsets.all(0),
                          shape: CircleBorder(),
                        ),
                      ),
                      Container(
                        width: 25,
                        child: MaterialButton(
                          height: 22,
                          onPressed: () {
                            setState(() {
                              this.widget.initTag = false;
                              this.widget.onClose();
                            });
                          },
                          color: Colors.grey,
                          textColor: Colors.white,
                          child: Icon(
                            Icons.close,
                            size: 15,
                          ),
                          padding: EdgeInsets.all(0),
                          shape: CircleBorder(),
                        ),
                      ),
                    ],
                  ),
                ),
              ),
            ],
          );
  }

  Widget _buildContainerTag(BuildContext context) {
    return Container(
      width: widget.width,
      height: 200,
      child: Column(
        children: [
          Container(
            color: Colors.yellow,
            //height: 30,
            child: Material(
                child: TextField(
              style: TextStyle(fontSize: 12, color: Colors.black),
              decoration: InputDecoration(
                isDense: true,
                contentPadding: EdgeInsets.all(10),
                hintText: widget.labeltext,
                hintStyle: TextStyle(
                    fontSize: 12,
                    color: Colors.grey[400],
                    fontStyle: FontStyle.italic),
                enabledBorder: OutlineInputBorder(
                  borderSide: BorderSide(color: Colors.grey[300], width: 1.0),
                ),
                focusedBorder: OutlineInputBorder(
                  borderSide: BorderSide(color: Colors.grey[300], width: 1.0),
                ),
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.all(Radius.circular(5)),
                ),
              ),
            )),
          ),
          Container(
            margin: EdgeInsets.only(top: 5),
            decoration: BoxDecoration(
              color: Colors.grey[100],
              border: Border.all(color: Colors.grey[300]),
              borderRadius: BorderRadius.all(Radius.circular(5)),
            ),
            height: 100,
          )
        ],
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    //return _buildTags(context);
    return _buildContainerTag(context);
  }
}
